Inheritance in Object-Oriented Programming (OOP) allows a class (called a child or subclass) to inherit fields and methods from another class (called a parent or superclass). It promotes code reuse, hierarchical classification, and polymorphism.

ðŸ”¹ Types of Inheritance (in Java):
Single Inheritance: One subclass inherits from one superclass.

Multilevel Inheritance: A class inherits from a class, which itself inherits from another class.

Java does not support multiple inheritance with classes (to avoid ambiguity), but it supports it via interfaces.

ðŸ’¡ Example: 
class Animal {
    void eat() {
        System.out.println("This animal eats food.");
    }
}

class Dog extends Animal {
    void bark() {
        System.out.println("The dog barks.");
    }
}

class Puppy extends Dog {
    void weep() {
        System.out.println("The puppy weeps.");
    }
}

public class Main {
    public static void main(String[] args) {
        // Demonstrate Single Inheritance
        Dog dog = new Dog();
        dog.eat();  // Inherited from Animal
        dog.bark(); // Defined in Dog

        System.out.println("----");

        // Demonstrate Multilevel Inheritance
        Puppy puppy = new Puppy();
        puppy.eat();  // Inherited from Animal via Dog
        puppy.bark(); // Inherited from Dog
        puppy.weep(); // Defined in Puppy
    }
}